import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_squared_error
from sklearn.impute import SimpleImputer

# Load the dataset
df = pd.read_csv("uber.csv")

# Convert 'pickup_datetime' to datetime format if it exists
if 'pickup_datetime' in df.columns:
    df['pickup_datetime'] = pd.to_datetime(df['pickup_datetime'], errors='coerce')
    # Drop rows with invalid datetime entries
    df = df.dropna(subset=['pickup_datetime'])
    # Extract date and time features
    df['hour'] = df['pickup_datetime'].dt.hour
    df['day_of_week'] = df['pickup_datetime'].dt.dayofweek
    df['month'] = df['pickup_datetime'].dt.month
    # Drop the original datetime column
    df = df.drop('pickup_datetime', axis=1)

# Drop any remaining non-numeric columns
for column in df.columns:
    if df[column].dtype == 'object':
        df = df.drop(column, axis=1)

# Split the dataset into features and target
X = df.drop('fare_amount', axis=1)
y = df['fare_amount']

# Impute missing values in X
imputer = SimpleImputer(strategy='mean')
X = imputer.fit_transform(X)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Linear Regression
lr_model = LinearRegression()
lr_model.fit(X_train, y_train)
lr_preds = lr_model.predict(X_test)

# Random Forest Regression
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)
rf_preds = rf_model.predict(X_test)

# Linear Regression Evaluation
lr_r2 = r2_score(y_test, lr_preds)
lr_rmse = np.sqrt(mean_squared_error(y_test, lr_preds))

print(f"Linear Regression R2: {lr_r2}")
print(f"Linear Regression RMSE: {lr_rmse}")

# Random Forest Regression Evaluation
rf_r2 = r2_score(y_test, rf_preds)
rf_rmse = np.sqrt(mean_squared_error(y_test, rf_preds))

print(f"Random Forest R2: {rf_r2}")
print(f"Random Forest RMSE: {rf_rmse}")
